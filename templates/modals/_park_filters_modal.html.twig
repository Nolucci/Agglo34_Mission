<!-- Modal Filtres Équipements -->
<div class="modal fade" id="parkFiltersModal" tabindex="-1" role="dialog" aria-labelledby="parkFiltersModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="parkFiltersModalLabel">
                    <i class="fa fa-filter"></i> Filtres des Équipements Informatiques
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fermer">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="park-filter-form">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-type">Type</label>
                                <select class="form-control" id="filter-type" name="type">
                                    <option value="">Tous les types</option>
                                    {% set types = [] %}
                                    {% for equipment in equipments %}
                                        {% if equipment.type is not null and not (equipment.type in types) %}
                                            {% set types = types|merge([equipment.type]) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for type in types|sort %}
                                        <option value="{{ type }}">{{ type }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-brand">Marque</label>
                                <select class="form-control" id="filter-brand" name="brand">
                                    <option value="">Toutes les marques</option>
                                    {% set brands = [] %}
                                    {% for equipment in equipments %}
                                        {% if equipment.brand is not null and not (equipment.brand in brands) %}
                                            {% set brands = brands|merge([equipment.brand]) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for brand in brands|sort %}
                                        <option value="{{ brand }}">{{ brand }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                         <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-municipality">Commune</label>
                                <select class="form-control" id="filter-municipality" name="municipality">
                                    <option value="">Toutes les communes</option>
                                    {% set municipalities = [] %}
                                    {% for equipment in equipments %}
                                        {% if equipment.municipality is not null and not (equipment.municipality in municipalities) %}
                                            {% set municipalities = municipalities|merge([equipment.municipality]) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for municipality in municipalities|sort %}
                                        <option value="{{ municipality }}">{{ municipality }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-status">Statut</label>
                                <select class="form-control" id="filter-status" name="status">
                                    <option value="">Tous les statuts</option>
                                    <option value="actif">Actif</option>
                                    <option value="inactif">Inactif</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="apply-park-filters">
                    <i class="fa fa-filter"></i> Appliquer les Filtres
                </button>
                 <button type="button" class="btn btn-warning" id="reset-park-filters">
                    <i class="fa fa-refresh"></i> Réinitialiser
                </button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const applyFiltersBtn = document.getElementById('apply-park-filters');
    const resetFiltersBtn = document.getElementById('reset-park-filters');
    const filtersForm = document.getElementById('park-filter-form');
    const parkFiltersModal = document.getElementById('parkFiltersModal');

    // Assuming allEquipments and renderEquipmentsTable are accessible globally or in the same scope
    // If not, these would need to be passed or accessed differently.

    if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', function() {
            const formData = new FormData(filtersForm);
            const filters = {};

            for (let [key, value] of formData.entries()) {
                if (value) {
                    filters[key] = value.toLowerCase();
                }
            }

            displayedEquipments = allEquipments.filter(equipment => {
                let passesFilter = true;
                for (const key in filters) {
                    if (key === 'status') {
                         const filterValue = filters[key];
                         const equipmentStatus = equipment.isActive ? 'actif' : 'inactif';
                         if (filterValue !== '' && equipmentStatus !== filterValue) {
                             passesFilter = false;
                             break;
                         }
                    } else if (equipment[key] && equipment[key].toLowerCase() !== filters[key]) {
                         // For dropdowns, we need an exact match
                         passesFilter = false;
                         break;
                    }
                }
                return passesFilter;
            });

            renderEquipmentsTable(displayedEquipments);
            $(parkFiltersModal).modal('hide');
        });
    }

    if (resetFiltersBtn) {
        resetFiltersBtn.addEventListener('click', function() {
            filtersForm.reset();
            displayedEquipments = [...allEquipments];
            renderEquipmentsTable(displayedEquipments);
            $(parkFiltersModal).modal('hide');
        });
    }
});
</script>