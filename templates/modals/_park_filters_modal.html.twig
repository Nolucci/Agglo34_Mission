<!-- Modal Filtres Équipements -->
<div class="modal fade" id="parkFiltersModal" tabindex="-1" role="dialog" aria-labelledby="parkFiltersModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="parkFiltersModalLabel">
                    <i class="fa fa-filter"></i> Filtres des Équipements Informatiques
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fermer">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="park-filter-form">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-modele">Modèle</label>
                                <select class="form-control" id="filter-modele" name="modele">
                                    <option value="">Tous les modèles</option>
                                    {% set modeles = [] %}
                                    {% for equipment in equipments %}
                                        {% if equipment.modele is not null and not (equipment.modele in modeles) %}
                                            {% set modeles = modeles|merge([equipment.modele]) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for modele in modeles|sort %}
                                        <option value="{{ modele }}">{{ modele }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-service">Service</label>
                                <select class="form-control" id="filter-service" name="service">
                                    <option value="">Tous les services</option>
                                    {% set services = [] %}
                                    {% for equipment in equipments %}
                                        {% if equipment.service is not null and not (equipment.service in services) %}
                                            {% set services = services|merge([equipment.service]) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for service in services|sort %}
                                        <option value="{{ service }}">{{ service }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                         <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-commune">Commune</label>
                                <select class="form-control" id="filter-commune" name="commune">
                                    <option value="">Toutes les communes</option>
                                    {% set communes = [] %}
                                    {% set communes = {} %}
                                    {% for equipment in equipments %}
                                        {% if equipment.commune is not null and equipment.commune.id is defined and not (equipment.commune.id in communes|keys) %}
                                            {% set communes = communes|merge({(equipment.commune.id): equipment.commune.name}) %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for id, name in communes|sort %}
                                        <option value="{{ id }}">{{ name }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="filter-statut">Statut</label>
                                <select class="form-control" id="filter-statut" name="statut">
                                    <option value="">Tous les statuts</option>
                                    <option value="actif">Actif</option>
                                    <option value="inactif">Inactif</option>
                                    <option value="panne">Panne</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="apply-park-filters">
                    <i class="fa fa-filter"></i> Appliquer les Filtres
                </button>
                 <button type="button" class="btn btn-warning" id="reset-park-filters">
                    <i class="fa fa-refresh"></i> Réinitialiser
                </button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const applyFiltersBtn = document.getElementById('apply-park-filters');
    const resetFiltersBtn = document.getElementById('reset-park-filters');
    const filtersForm = document.getElementById('park-filter-form');
    const parkFiltersModal = document.getElementById('parkFiltersModal');

    // Assuming allEquipments and renderEquipmentsTable are accessible globally or in the same scope
    // If not, these would need to be passed or accessed differently.

    if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', function() {
            const formData = new FormData(filtersForm);
            const filters = {};

            for (let [key, value] of formData.entries()) {
                if (value) {
                    filters[key] = value.toLowerCase();
                }
            }

            displayedEquipments = allEquipments.filter(equipment => {
                let passesFilter = true;
                for (const key in filters) {
                    if (key === 'statut') {
                         const filterValue = filters[key];
                         const equipmentStatut = equipment.statut ? equipment.statut.toLowerCase() : '';
                         if (filterValue !== '' && equipmentStatut !== filterValue) {
                             passesFilter = false;
                             break;
                         }
                    } else if (key === 'commune') {
                        const filterValue = filters[key];
                        if (filterValue !== '' && (!equipment.commune || equipment.commune.id.toString() !== filterValue)) {
                            passesFilter = false;
                            break;
                        }
                    } else if (key === 'modele') {
                        const filterValue = filters[key];
                        if (filterValue !== '' && (!equipment.modele || equipment.modele.toLowerCase() !== filterValue)) {
                            passesFilter = false;
                            break;
                        }
                    } else if (key === 'service') {
                        const filterValue = filters[key];
                        if (filterValue !== '' && (!equipment.service || equipment.service.toLowerCase() !== filterValue)) {
                            passesFilter = false;
                            break;
                        }
                    }
                }
                return passesFilter;
            });

            renderEquipmentsTable(displayedEquipments);
            $(parkFiltersModal).modal('hide');
        });
    }

    if (resetFiltersBtn) {
        resetFiltersBtn.addEventListener('click', function() {
            filtersForm.reset();
            displayedEquipments = [...allEquipments];
            renderEquipmentsTable(displayedEquipments);
            $(parkFiltersModal).modal('hide');
        });
    }
});
</script>