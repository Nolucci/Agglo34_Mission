{% extends './base.html.twig' %}

{% block title %}Informations du Parc Informatique{% endblock %}

{% block body %}
<div class="page-wrapper">
    <div class="page-container">
        <div class="main-content">
            <div class="section__content section__content--p30 park-content">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title" id="park-stats-title">Statistiques du Parc</strong>
                                </div>
                                <div class="card-body text-center" style="height: 300px;">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fas fa-desktop fa-2x"></i></h5>
                                                    <p class="card-text">Total des équipements</p>
                                                    <h3 style="font-size: 1.5rem;">{{ equipments|length }}</h3>{# Reduced font size #}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fas fa-building fa-2x"></i></h5>
                                                    <p class="card-text">Bâtiments</p>
                                                    <h3 style="font-size: 1.5rem;">{{ parkStats.unique_services }}</h3>{# Reduced font size #}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fas fa-building fa-2x"></i></h5>
                                                    <p class="card-text">Entités</p>
                                                    <h3 style="font-size: 1.5rem;">{{ parkStats.unique_municipalities }}</h3>{# Reduced font size #}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fas fa-check-circle fa-2x"></i></h5>
                                                    <p class="card-text">Équipements actifs</p>
                                                    <h3 style="font-size: 1.5rem;">{{ parkStats.active_equipments }}</h3>{# Reduced font size #}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Graphiques du Parc</strong>
                                </div>
                                <div class="card-body" style="height: 300px;">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div style="height: 250px;">
                                                <canvas id="equipment-os-chart"></canvas>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div style="height: 250px;">
                                                <canvas id="equipment-model-chart"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <div class="card">
                               <div class="card-header">
                                   <strong class="card-title">Carte des Équipements</strong>
                               </div>
                               <div class="card-body text-center" style="height: 300px;">
                                   <div id="map-agglomeration" style="height: 300px; width: 100%; border: 1px solid #ccc;"></div>
                               </div>
                           </div>
                       </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Liste des Équipements Informatiques</strong>
                                    <button class="btn btn-sm btn-danger float-right ml-2" id="delete-all-equipments-btn" data-toggle="modal" data-target="#deleteAllEquipmentsModal">
                                        <i class="fa fa-trash"></i> Supprimer tout
                                    </button>
                                    <div class="btn-group float-right ml-2">
                                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="exportDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fa fa-download"></i> Exporter
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="exportDropdown">
                                            <a class="dropdown-item" href="#" id="export-csv-btn">
                                                <i class="fa fa-file-excel-o"></i> Export CSV
                                            </a>
                                            <a class="dropdown-item" href="#" id="export-pdf-btn">
                                                <i class="fa fa-file-pdf-o"></i> Export PDF
                                            </a>
                                        </div>
                                    </div>
                                    <button class="btn btn-sm btn-primary float-right ml-2" data-toggle="modal" data-target="#parkFiltersModal">
                                        <i class="fa fa-filter"></i> Filtres
                                    </button>
                                    <button class="btn btn-sm btn-success float-right" data-toggle="modal" data-target="#parkModal">
                                        <i class="fa fa-plus"></i> Ajouter
                                    </button>
                                </div>
                                <div class="card-body" style="height: auto;">{# Adjusted height for table #}
                                     <div class="form-group">
                                        <label for="searchEquipmentInput">Rechercher par attribut:</label>
                                        <input type="text" class="form-control" id="searchEquipmentInput" placeholder="Entrez un terme de recherche">
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Commune</th>
                                                    <th>Lieu</th>
                                                    <th>Étiquetage</th>
                                                    <th>Modèle</th>
                                                    <th>Numéro de série</th>
                                                    <th>Service</th>
                                                    <th>Utilisateur</th>
                                                    <th>Date de garantie</th>
                                                    <th>OS</th>
                                                    <th>Version</th>
                                                    <th>Statut</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="equipments-tbody">
                                                <!-- Les données seront chargées via JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                    <!-- Pagination intégrée dans le tableau -->
                                    <div class="mt-3">
                                        <nav aria-label="Pagination des équipements">
                                            <ul class="pagination justify-content-center" id="equipments-pagination">
                                                <!-- La pagination sera générée par JavaScript -->
                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% include './modals/_park_modal.html.twig' %}
{% include './modals/_park_filters_modal.html.twig' %}
</div>

{# {% include './modals/_park_filters_modal.html.twig' with { equipments: equipments } %} #}
{% import './infos/_macros.html.twig' as macros %}
{{ macros.static_modal('Confirmer la suppression', 'Voulez-vous vraiment supprimer cet élément ?') }}

<!-- Modal pour confirmer la suppression de tous les équipements -->
<div class="modal fade" id="deleteAllEquipmentsModal" tabindex="-1" role="dialog" aria-labelledby="deleteAllEquipmentsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAllEquipmentsModalLabel">Confirmer la suppression</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Voulez-vous vraiment supprimer <strong>tous</strong> les équipements informatiques ? Cette action est irréversible.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-danger" id="confirm-delete-all-equipments-btn">Supprimer tout</button>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/park-map.js') }}"></script>
    <script src="{{ asset('js/equipment.js') }}"></script>
    <script src="{{ asset('js/search-filter.js') }}"></script>
    <script src="{{ asset('js/charts.js') }}"></script>
    <!-- Charger delete-confirmation.js après les autres scripts pour s'assurer que les fonctions sont définies -->
    <script src="{{ asset('js/delete-confirmation.js') }}" defer></script>
    <script>
        window.allEquipments = [];
        window.displayedEquipments = [];
        window.currentPage = 1;
        window.totalPages = 1;
        window.itemsPerPage = 50;
        window.totalItems = 0;
        window.currentSearchTerm = '';

        // Charger les données des équipements avec pagination
        window.loadEquipments = function(page = 1, searchTerm = '') {
            const url = new URL('/equipment/list', window.location.origin);
            url.searchParams.set('page', page);
            url.searchParams.set('limit', window.itemsPerPage);
            url.searchParams.set('sort', 'commune.name,service');
            url.searchParams.set('order', 'asc');
            if (searchTerm) {
                url.searchParams.set('search', searchTerm);
            }

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    window.allEquipments = data.equipments;
                    window.displayedEquipments = [...window.allEquipments];
                    window.totalItems = data.total;
                    window.totalPages = data.totalPages;
                    window.currentPage = data.page;
                    window.currentSearchTerm = searchTerm;

                    window.renderEquipmentsTable(window.displayedEquipments);
                    window.renderEquipmentPagination();
                })
                .catch(error => {
                    console.error('Erreur lors du chargement des équipements:', error);
                });
        }

        // Générer la pagination
        window.renderEquipmentPagination = function() {
            const paginationElement = document.getElementById('equipments-pagination');
            if (!paginationElement) return;

            paginationElement.innerHTML = '';

            // Bouton début
            const firstLi = document.createElement('li');
            firstLi.className = `page-item ${window.currentPage === 1 ? 'disabled' : ''}`;
            const firstLink = document.createElement('a');
            firstLink.className = 'page-link';
            firstLink.href = '#';
            firstLink.textContent = 'Début';
            firstLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (window.currentPage > 1) {
                    window.loadEquipments(1, window.currentSearchTerm || '');
                }
            });
            firstLi.appendChild(firstLink);
            paginationElement.appendChild(firstLi);

            // Bouton précédent
            const prevLi = document.createElement('li');
            prevLi.className = `page-item ${window.currentPage === 1 ? 'disabled' : ''}`;
            const prevLink = document.createElement('a');
            prevLink.className = 'page-link';
            prevLink.href = '#';
            prevLink.textContent = 'Précédent';
            prevLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (window.currentPage > 1) {
                    window.loadEquipments(window.currentPage - 1, window.currentSearchTerm || '');
                }
            });
            prevLi.appendChild(prevLink);
            paginationElement.appendChild(prevLi);

            // Pages numérotées
            const maxPagesToShow = 5;
            let startPage = Math.max(1, window.currentPage - Math.floor(maxPagesToShow / 2));
            let endPage = Math.min(window.totalPages, startPage + maxPagesToShow - 1);

            if (endPage - startPage + 1 < maxPagesToShow) {
                startPage = Math.max(1, endPage - maxPagesToShow + 1);
            }

            for (let i = startPage; i <= endPage; i++) {
                const pageLi = document.createElement('li');
                pageLi.className = `page-item ${i === window.currentPage ? 'active' : ''}`;
                const pageLink = document.createElement('a');
                pageLink.className = 'page-link';
                pageLink.href = '#';
                pageLink.textContent = i;
                pageLink.addEventListener('click', (e) => {
                    e.preventDefault();
                    window.loadEquipments(i, window.currentSearchTerm || '');
                });
                pageLi.appendChild(pageLink);
                paginationElement.appendChild(pageLi);
            }

            // Bouton suivant
            const nextLi = document.createElement('li');
            nextLi.className = `page-item ${window.currentPage === window.totalPages ? 'disabled' : ''}`;
            const nextLink = document.createElement('a');
            nextLink.className = 'page-link';
            nextLink.href = '#';
            nextLink.textContent = 'Suivant';
            nextLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (window.currentPage < window.totalPages) {
                    window.loadEquipments(window.currentPage + 1, window.currentSearchTerm || '');
                }
            });
            nextLi.appendChild(nextLink);
            paginationElement.appendChild(nextLi);

            // Bouton fin
            const lastLi = document.createElement('li');
            lastLi.className = `page-item ${window.currentPage === window.totalPages ? 'disabled' : ''}`;
            const lastLink = document.createElement('a');
            lastLink.className = 'page-link';
            lastLink.href = '#';
            lastLink.textContent = 'Fin';
            lastLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (window.currentPage < window.totalPages) {
                    window.loadEquipments(window.totalPages, window.currentSearchTerm || '');
                }
            });
            lastLi.appendChild(lastLink);
            paginationElement.appendChild(lastLi);
        }

        // Fonction pour rendre la table des équipements
        window.renderEquipmentsTable = function(equipmentsToDisplay) {
            const tbody = document.querySelector('.table tbody'); // Assuming only one table for now
            tbody.innerHTML = ''; // Clear current table

            equipmentsToDisplay.forEach(equipment => {
                const row = `
                    <tr>
                        <td>${equipment.commune && typeof equipment.commune === 'object' && equipment.commune.name ? equipment.commune.name : 'Non défini'}</td>
                        <td>${equipment.localisation || 'Non défini'}</td>
                        <td>${equipment.etiquetage || 'Non défini'}</td>
                        <td>${equipment.modele || 'Non défini'}</td>
                        <td>${equipment.numeroSerie || 'Non défini'}</td>
                        <td>${equipment.service || 'Non défini'}</td>
                        <td>${equipment.utilisateur || 'Non assigné'}</td>
                        <td>${equipment.dateGarantie ? new Date(equipment.dateGarantie).toISOString().split('T')[0] : 'Non défini'}</td>
                        <td>${equipment.os || 'Non défini'}</td>
                        <td>${equipment.version || 'Non défini'}</td>
                        <td>
                            ${equipment.statut === 'Actif' ? '<span class="badge badge-success">Actif</span>' :
                              equipment.statut === 'Panne' ? '<span class="badge badge-danger">Panne</span>' :
                              '<span class="badge badge-secondary">Inactif</span>'}
                        </td>
                        <td>
                            <div class="btn-group">
                                <button class="btn btn-sm btn-primary edit-btn mr-1" onclick="editEquipment(${equipment.id})">
                                    <i class="fa fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger delete-btn" data-id="${equipment.id}" data-type="equipment" data-toggle="modal" data-target="#staticModal">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
                tbody.innerHTML += row;
            });
        }

        // Initialisation de la carte des équipements
        function initMap() {
            // Logique de la carte à implémenter
        }

        // Initial render of the table
        document.addEventListener('DOMContentLoaded', function() {
            window.loadEquipments();

            // Gestionnaire pour le bouton de suppression de tous les équipements
            const deleteAllBtn = document.getElementById('confirm-delete-all-equipments-btn');
            if (deleteAllBtn) {
                deleteAllBtn.addEventListener('click', function() {
                    fetch('/equipment/delete-all', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            $('#deleteAllEquipmentsModal').modal('hide');
                            alert(data.message);
                            window.location.reload();
                        } else {
                            alert('Erreur: ' + (data.message || 'Une erreur est survenue lors de la suppression'));
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert('Une erreur est survenue lors de la suppression');
                    });
                });
            }

            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function(event) {
                    const searchTerm = event.target.value.toLowerCase();

                    // Si le terme de recherche n'est pas vide, charger toutes les données
                    // La recherche est maintenant gérée par search-filter.js

                    displayedEquipments = allEquipments.filter(equipment => {
                        for (const key in equipment) {
                            const value = equipment[key];
                            if (key === 'commune') {
                                if (value && typeof value === 'object' && value.name && value.name.toLowerCase().includes(searchTerm)) {
                                    return true;
                                }
                            } else if (value !== null && value !== undefined && value.toString().toLowerCase().includes(searchTerm)) {
                                return true;
                            }
                        }
                        return false;
                    });
                    window.renderEquipmentsTable(window.displayedEquipments);
                });
            }
        });

        // Filter logic for Park Equipment
        const parkFilterForm = document.getElementById('park-filter-form');
        const applyParkFiltersButton = document.getElementById('apply-park-filters');

        if (applyParkFiltersButton) {
            applyParkFiltersButton.addEventListener('click', function() {
                const filterModele = document.getElementById('filter-modele').value;
                const filterService = document.getElementById('filter-service').value;
                const filterCommune = document.getElementById('filter-commune').value;
                const filterStatut = document.getElementById('filter-statut').value;
                const filterLocalisation = document.getElementById('filter-localisation').value;
                const filterEtiquetage = document.getElementById('filter-etiquetage').value;
                const filterNumeroSerie = document.getElementById('filter-numeroSerie').value;
                const filterUtilisateur = document.getElementById('filter-utilisateur').value;
                const filterOs = document.getElementById('filter-os').value;
                const filterVersion = document.getElementById('filter-version').value;

                window.displayedEquipments = window.allEquipments.filter(equipment => {
                    // Filtre par modèle
                    if (filterModele && equipment.modele) {
                        if (!equipment.modele.toLowerCase().includes(filterModele.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par service
                    if (filterService && equipment.service) {
                        if (!equipment.service.toLowerCase().includes(filterService.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par commune
                    if (filterCommune && equipment.commune) {
                        // Vérifier si c'est un ID ou un nom de commune
                        const isNumeric = !isNaN(filterCommune);
                        if (isNumeric) {
                            // Filtrage par ID
                            if (equipment.commune.id && equipment.commune.id.toString() !== filterCommune) {
                                return false;
                            }
                        } else {
                            // Filtrage par nom
                            if (!equipment.commune.name || !equipment.commune.name.toLowerCase().includes(filterCommune.toLowerCase())) {
                                return false;
                            }
                        }
                    }

                    // Filtre par statut
                    if (filterStatut && equipment.statut) {
                        if (!equipment.statut.toLowerCase().includes(filterStatut.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par localisation
                    if (filterLocalisation && equipment.localisation) {
                        if (!equipment.localisation.toLowerCase().includes(filterLocalisation.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par étiquetage
                    if (filterEtiquetage && equipment.etiquetage) {
                        if (!equipment.etiquetage.toLowerCase().includes(filterEtiquetage.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par numéro de série
                    if (filterNumeroSerie && equipment.numeroSerie) {
                        if (!equipment.numeroSerie.toLowerCase().includes(filterNumeroSerie.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par utilisateur
                    if (filterUtilisateur && equipment.utilisateur) {
                        if (!equipment.utilisateur.toLowerCase().includes(filterUtilisateur.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par OS
                    if (filterOs && equipment.os) {
                        if (!equipment.os.toLowerCase().includes(filterOs.toLowerCase())) {
                            return false;
                        }
                    }

                    // Filtre par version
                    if (filterVersion && equipment.version) {
                        if (!equipment.version.toLowerCase().includes(filterVersion.toLowerCase())) {
                            return false;
                        }
                    }

                    return true;
                });

                window.renderEquipmentsTable(window.displayedEquipments);

                // Mettre à jour la pagination pour les données filtrées
                window.totalItems = window.displayedEquipments.length;
                window.totalPages = Math.ceil(window.totalItems / window.itemsPerPage);
                window.currentPage = 1;
                window.renderEquipmentPagination();

                // Close the modal after applying filters
                $('#parkFiltersModal').modal('hide');
            });
        }

        // Gestion des exports
        document.addEventListener('DOMContentLoaded', function() {
            // Export CSV
            const exportCsvBtn = document.getElementById('export-csv-btn');
            if (exportCsvBtn) {
                exportCsvBtn.addEventListener('click', function(e) {
                    e.preventDefault();

                    // Récupérer les filtres actifs
                    const filters = getActiveFilters();

                    // Construire l'URL avec les filtres
                    let url = '/equipment/export/csv';
                    if (Object.keys(filters).length > 0) {
                        url += '?' + new URLSearchParams(filters).toString();
                    }

                    // Rediriger vers l'URL d'export
                    window.location.href = url;
                });
            }

            // Export PDF
            const exportPdfBtn = document.getElementById('export-pdf-btn');
            if (exportPdfBtn) {
                exportPdfBtn.addEventListener('click', function(e) {
                    e.preventDefault();

                    // Récupérer les filtres actifs
                    const filters = getActiveFilters();

                    // Construire l'URL avec les filtres
                    let url = '/equipment/export/pdf';
                    if (Object.keys(filters).length > 0) {
                        url += '?' + new URLSearchParams(filters).toString();
                    }

                    // Ouvrir l'URL d'export dans une nouvelle fenêtre
                    window.open(url, '_blank');
                });
            }

        });

        // Fonction pour récupérer les filtres actifs pour les exports (accessible globalement)
        function getActiveFilters() {
            const filters = {};

            // Récupérer les filtres depuis le formulaire de filtres
            const filterForm = document.getElementById('park-filter-form');
            if (filterForm) {
                const commune = document.getElementById('filter-commune');
                if (commune && commune.value) {
                    filters.commune = commune.value;
                }

                const service = document.getElementById('filter-service');
                if (service && service.value) {
                    filters.service = service.value;
                }

                const modele = document.getElementById('filter-modele');
                if (modele && modele.value) {
                    filters.modele = modele.value;
                }

                const statut = document.getElementById('filter-statut');
                if (statut && statut.value) {
                    filters.statut = statut.value;
                }

                const os = document.getElementById('filter-os');
                if (os && os.value) {
                    filters.os = os.value;
                }

                const localisation = document.getElementById('filter-localisation');
                if (localisation && localisation.value) {
                    filters.localisation = localisation.value;
                }

                const etiquetage = document.getElementById('filter-etiquetage');
                if (etiquetage && etiquetage.value) {
                    filters.etiquetage = etiquetage.value;
                }

                const numeroSerie = document.getElementById('filter-numeroSerie');
                if (numeroSerie && numeroSerie.value) {
                    filters.numeroSerie = numeroSerie.value;
                }

                const utilisateur = document.getElementById('filter-utilisateur');
                if (utilisateur && utilisateur.value) {
                    filters.utilisateur = utilisateur.value;
                }

                const version = document.getElementById('filter-version');
                if (version && version.value) {
                    filters.version = version.value;
                }
            }

            return filters;
        }

    // Le code de gestion de la confirmation de suppression a été déplacé dans delete-confirmation.js
    </script>
{% endblock %}
