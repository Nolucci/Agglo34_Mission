{% extends './base.html.twig' %}

{% block title %}Informations des Lignes Téléphoniques{% endblock %}

{% block body %}
<div class="page-wrapper">
    <div class="page-container">
        <div class="main-content">
            <div class="section__content section__content--p30">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Statistiques des Lignes</strong>
                                </div>
                                <div class="card-body text-center" style="height: 300px;">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fa fa-phone fa-2x"></i></h5>
                                                    <p class="card-text">Total des lignes</p>
                                                    <h3 style="font-size: 1.5rem;">{{ lines|length }}</h3>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fa fa-building fa-2x"></i></h5>
                                                    <p class="card-text">Services uniques</p>
                                                    <h3 style="font-size: 1.5rem;">{{ phoneLineStats.unique_services }}</h3>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                    <h5 class="card-title"><i class="fa fa-signal fa-2x"></i></h5>
                                                    <p class="card-text">Opérateurs</p>
                                                    <h3 style="font-size: 1.5rem;">{{ phoneLineStats.unique_operators }}</h3>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="card text-center">
                                                <div class="card-body">
                                                     <h5 class="card-title"><i class="fa fa-globe fa-2x"></i></h5>
                                                    <p class="card-text">Lignes globales</p>
                                                    <h3 style="font-size: 1.5rem;">{{ phoneLineStats.global_lines }}</h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Nombre de Lignes par Commune</strong>
                                </div>
                                <div class="card-body text-center" style="height: 300px;">
                                    <canvas id="sales-chart"></canvas>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Lignes par Opérateur</strong>
                                </div>
                                <div class="card-body text-center" style="height: 300px;">
                                    <canvas id="operator-bar-chart"></canvas>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                             <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Carte de l'Agglomération</strong>
                                </div>
                                <div class="card-body text-center" style="height: 300px;">
                                    <div id="map-agglomeration" style="height: 300px; width: 100%; border: 1px solid #ccc;"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-header">
                                    <strong class="card-title">Liste des Lignes Téléphoniques</strong>
                                    <button class="btn btn-sm btn-success float-right mr-2" data-toggle="modal" data-target="#linesModal">
                                        <i class="fa fa-plus"></i> Ajouter
                                    </button>
                                    <button class="btn btn-sm btn-primary float-right" data-toggle="modal" data-target="#lignesFiltersModal">
                                        <i class="fa fa-filter"></i> Filtres
                                    </button>
                                </div>
                                <div class="card-body" style="height: auto;">{# Adjusted height for table #}
                                     <div class="form-group">
                                        <label for="searchInput">Rechercher par attribut:</label>
                                        <input type="text" class="form-control" id="searchInput" placeholder="Entrez un terme de recherche">
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Commune</th>
                                                    <th>Localisation</th>
                                                    <th>Service</th>
                                                    <th>Attribué à</th>
                                                    <th>Opérateur</th>
                                                    <th>Type de Ligne</th>
                                                    <th>Statut</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                {% for line in lines %}
                                                <tr>
                                                    <td>{{ line.municipality }}</td>
                                                    <td>{{ line.location }}</td>
                                                    <td>{{ line.service }}</td>
                                                    <td>{{ line.assignedTo }}</td>
                                                    <td>{{ line.operator }}</td>
                                                    <td>{{ line.lineType }}</td>
                                                    <td>
                                                        {% if line.isGlobal %}
                                                            <span class="badge badge-success">Global</span>
                                                        {% else %}
                                                            <span class="badge badge-secondary">Local</span>
                                                        {% endif %}
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-sm btn-danger delete-btn" data-id="{{ line.id }}" data-type="phone_line" data-toggle="modal" data-target="#staticModal">
                                                            <i class="fa fa-trash"></i> Supprimer
                                                        </button>
                                                    </td>
                                                </tr>
                                                {% endfor %}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% include './modals/_line_modal.html.twig' %}
{% include './modals/_lines_filters_modal.html.twig' with { phoneLines: lines } %}
</div>

{% import './infos/_macros.html.twig' as macros %}
{{ macros.static_modal('Confirmer la suppression', 'Voulez-vous vraiment supprimer cet ligne ?') }}

{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
      const allPhoneLines = {{ lines | json_encode | raw }};
      let displayedPhoneLines = [...allPhoneLines];

        // Sales Chart
        var ctxSales = document.getElementById("sales-chart");
        if (ctxSales) {
            ctxSales.height = 150;
            var myChartSales = new Chart(ctxSales, {
                type: 'bar',
                data: {
                    labels: {{ salesChartData.labels | json_encode | raw }},
                    datasets: [{
                        label: "Nombre de Lignes",
                        data: {{ salesChartData.data | json_encode | raw }},
                        backgroundColor: 'rgba(220,53,69,0.75)',
                        borderColor: 'rgba(220,53,69,0.75)',
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true,
                    tooltips: {
                        mode: 'nearest',
                        axis: 'x',
                        titleFontSize: 12,
                        titleFontColor: '#000',
                        bodyFontColor: '#000',
                        backgroundColor: '#fff',
                        titleFontFamily: 'Poppins',
                        bodyFontFamily: 'Poppins',
                        cornerRadius: 3,
                        intersect: false,
                    },
                    legend: {
                        display: false,
                        labels: {
                            fontFamily: 'Poppins',
                        },
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                fontFamily: "Poppins"
                            }
                        }],
                        yAxes: [{
                            display: true,
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                beginAtZero: true,
                                fontFamily: "Poppins"
                            }
                        }]
                    },
                    title: {
                        display: false,
                        text: 'Normal Legend'
                    }
                }
            });
        }

        // Operator Bar Chart
        var ctxOperator = document.getElementById("operator-bar-chart");
        if (ctxOperator) {
            ctxOperator.height = 200; // Ajustez la hauteur si nécessaire
            var myChartOperator = new Chart(ctxOperator, {
                type: 'bar',
                defaultFontFamily: 'Poppins',
                data: {
                    labels: {{ operatorChartData.labels | json_encode | raw }},
                    datasets: [
                        {
                            label: "Nombre de Lignes", // Adapter le label
                            data: {{ operatorChartData.data | json_encode | raw }},
                            borderColor: "rgba(0, 123, 255, 0.9)",
                            borderWidth: "0",
                            backgroundColor: "rgba(0, 123, 255, 0.5)",
                            fontFamily: "Poppins"
                        }
                    ]
                },
                options: {
                    legend: {
                        position: 'top',
                        labels: {
                            fontFamily: 'Poppins'
                        }
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                fontFamily: "Poppins"
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                fontFamily: "Poppins"
                            }
                        }]
                    }
                }
            });
        }


        // Fonction pour rendre la table des lignes
        function renderLinesTable(linesToDisplay) {
            const tbody = document.querySelector('.table tbody');
            tbody.innerHTML = ''; // Clear current table

            linesToDisplay.forEach(line => {
                const row = `
                    <tr>
                        <td>${line.municipality}</td>
                        <td>${line.location}</td>
                        <td>${line.service}</td>
                        <td>${line.assignedTo}</td>
                        <td>${line.operator}</td>
                        <td>${line.lineType}</td>
                        <td>
                            ${line.isGlobal ? '<span class="badge badge-success">Global</span>' : '<span class="badge badge-secondary">Local</span>'}
                        </td>
                        <td>
                            <button class="btn btn-sm btn-danger delete-btn" data-id="${line.id}" data-type="phone_line" data-toggle="modal" data-target="#staticModal">
                                <i class="fa fa-trash"></i> Supprimer
                            </button>
                        </td>
                    </tr>
                `;
                tbody.innerHTML += row;
            });
        }

        // Initialisation de la carte des lignes
        function initMap() {
            // Logique de la carte à implémenter
        }

        // Initial render of the table
        document.addEventListener('DOMContentLoaded', function() {
            renderLinesTable(displayedPhoneLines);

            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function(event) {
                    const searchTerm = event.target.value.toLowerCase();
                    displayedPhoneLines = allPhoneLines.filter(line => {
                        // Filter based on any attribute value containing the search term
                        for (const key in line) {
                            const value = line[key];
                            if (value !== null && value !== undefined && value.toString().toLowerCase().includes(searchTerm)) {
                                return true;
                            }
                        }
                        return false;
                    });
                    renderLinesTable(displayedPhoneLines);
                });
            }
        });
    // Filter logic for Phone Lines
    const applyFiltersBtn = document.getElementById('applyFiltersBtn');
    const resetFiltersBtn = document.getElementById('resetFiltersBtn');
    const filtersForm = document.getElementById('lignesFiltersForm');
    const lignesFiltersModal = document.getElementById('lignesFiltersModal');

    if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', function() {
            const formData = new FormData(filtersForm);
            const filters = {};

            for (let [key, value] of formData.entries()) {
                if (value) {
                    filters[key] = value;
                }
            }

            displayedPhoneLines = allPhoneLines.filter(line => {
                let passesFilter = true;
                for (const key in filters) {
                    const filterValue = filters[key];
                    const lineValue = line[key];

                    if (key === 'isGlobal') {
                        const filterBoolean = filterValue === '1';
                        if (lineValue !== filterBoolean) {
                            passesFilter = false;
                            break;
                        }
                    } else if (lineValue === null || lineValue === undefined) {
                         passesFilter = false;
                         break;
                    }
                    else if (lineValue.toString().toLowerCase() !== filterValue.toLowerCase()) {
                        passesFilter = false;
                        break;
                    }
                }
                return passesFilter;
            });

            renderLinesTable(displayedPhoneLines);
            $('#lignesFiltersModal').modal('hide');
        });
    }

    if (resetFiltersBtn) {
        resetFiltersBtn.addEventListener('click', function() {
            filtersForm.reset();
            displayedPhoneLines = [...allPhoneLines];
            renderLinesTable(displayedPhoneLines);
            $('#lignesFiltersModal').modal('hide');
        });
    }
    </script>
   
{% endblock %}
