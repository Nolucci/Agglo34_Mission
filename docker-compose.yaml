services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sru_app
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    environment:
      APP_ENV: "${APP_ENV:-prod}"
      APP_SECRET: "${APP_SECRET}"
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@database:5432/${DB_NAME}?serverVersion=16&charset=utf8"
      LDAP_HOST: "${LDAP_HOST}"
      LDAP_PORT: "${LDAP_PORT:-389}"
      LDAP_ENCRYPTION: "${LDAP_ENCRYPTION:-none}"
      LDAP_BASE_DN: "${LDAP_BASE_DN}"
      LDAP_SEARCH_DN: "${LDAP_SEARCH_DN}"
      LDAP_SEARCH_PASSWORD: "${LDAP_SEARCH_PASSWORD}"
      LDAP_UID_KEY: "${LDAP_UID_KEY:-sAMAccountName}"
    networks:
      sru_network:
        ipv4_address: 172.40.0.10

  webserver:
    image: httpd:2.4
    container_name: sru_webserver
    ports:
      - "${WEB_PORT:-4080}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
    depends_on:
      - app
    restart: unless-stopped
    networks:
      sru_network:
        ipv4_address: 172.40.0.11

  pgadmin:
    image: dpage/pgadmin4
    container_name: sru_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-4081}:80"
      - "${PGADMIN_HTTPS_PORT:-4044}:443"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      sru_network:
        ipv4_address: 172.40.0.3

  database:
    image: postgres:16
    container_name: sru_postgresql16
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-4032}:5432"
    restart: unless-stopped
    networks:
      sru_network:
        ipv4_address: 172.40.0.2
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "$${DB_NAME}", "-U", "$${DB_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s

networks:
  sru_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.0.0/24

volumes:
  postgres_data:
  pgadmin_data:
